<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lei</title>
  
  <subtitle>蹇磊的个人技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-27T15:06:34.329Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>蹇磊</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ggplot����ͼ����KEGG���򸻼�ͨ·</title>
    <link href="http://yoursite.com/2019/03/27/ggplot%E6%B0%94%E6%B3%A1%E5%9B%BE%E5%88%86%E6%9E%90KEGG%E5%9F%BA%E5%9B%A0%E5%AF%8C%E9%9B%86%E9%80%9A%E8%B7%AF/"/>
    <id>http://yoursite.com/2019/03/27/ggplot气泡图分析KEGG基因富集通路/</id>
    <published>2019-03-27T10:21:34.000Z</published>
    <updated>2019-03-27T15:06:34.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="emsp-1-�������ݣ�����KEGGͨ·����ͨ·���򸻼�����Pֵ�͸���������csv��ʽ�l���"><a href="#emsp-1-�������ݣ�����KEGGͨ·����ͨ·���򸻼�����Pֵ�͸���������csv��ʽ�l���" class="headerlink" title="&emsp;1. �������ݣ�����KEGGͨ·����ͨ·���򸻼�����Pֵ�͸���������csv��ʽ�ļ���"></a>&emsp;1. �������ݣ�����KEGGͨ·����ͨ·���򸻼�����Pֵ�͸���������csv��ʽ�ļ���</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- read.csv(<span class="string">"���csv�ļ�.csv"</span>)<span class="comment">#����csv��ʽ����Ϊx</span></span><br><span class="line">x<span class="comment">#��ʾ����</span></span><br></pre></td></tr></table></figure><p>���ǵ����ݳ����������ģ�<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">                                   Term GeneNumber      pValue RichFactor</span><br><span class="line">1                           Spliceosome         12 0.004143058   2.637514</span><br><span class="line">2                 Arginine biosynthesis          3 0.042939696   4.351899</span><br><span class="line">3   Antigen processing and presentation          6 0.051676443   2.417722</span><br><span class="line">4                mTOR signaling pathway         10 0.055317720   1.896252</span><br><span class="line">5                cAMP signaling pathway         11 0.109859128   1.603715</span><br><span class="line">6                 p53 signaling pathway          5 0.110785204   2.102367</span><br><span class="line">7                   MicroRNAs <span class="keyword">in</span> cancer          9 0.116145959   1.673807</span><br><span class="line">8                MAPK signaling pathway         13 0.132300704   1.484900</span><br><span class="line">9  Toll-like receptor signaling pathway          5 0.280225219   1.480238</span><br><span class="line">10                            Apoptosis          5 0.553767557   1.043621</span><br></pre></td></tr></table></figure></p><h2 id="emsp-2-����ggplot2����������ͼ"><a href="#emsp-2-����ggplot2����������ͼ" class="headerlink" title="&emsp;2. ����ggplot2����������ͼ"></a>&emsp;2. ����ggplot2����������ͼ</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library(ggplot2) <span class="comment">#����ggplot��</span></span><br><span class="line">y &lt;- ggplot(x, aes(x=RichFactor, y=Term,  size=GeneNumber, color=-1*log10(pValue))) + geom_point()  + scale_colour_gradient(low=<span class="string">"green"</span>,high=<span class="string">"red"</span>) + labs(color=expression(-<span class="built_in">log</span>[10](pValue)),size=<span class="string">"Gene number"</span>, x=<span class="string">"Rich factor"</span>,y=<span class="string">"Pathway name"</span>,title=<span class="string">"Pathway enrichment"</span>)<span class="comment"># ��ͼȷ��x��y�Ტ����ͨ·�����������ı��Ĵ�С������pֵ��С�ı�����ɫ + �Զ���pֵ�Ľ�����ɫ + ���ñ��⼰��ע����</span></span><br></pre></td></tr></table></figure><h2 id="emsp-3-��������������ͼ"><a href="#emsp-3-��������������ͼ" class="headerlink" title="&emsp;3. ��������������ͼ"></a>&emsp;3. ��������������ͼ</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggsave(<span class="string">"����.png"</span>,width=5.5,height=4)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;emsp-1-�������ݣ�����KEGGͨ·����ͨ·���򸻼�����Pֵ�͸���������csv��ʽ�l���&quot;&gt;&lt;a href=&quot;#emsp-1-�������ݣ�����KEGGͨ·����ͨ·���򸻼�����Pֵ�͸��������
      
    
    </summary>
    
      <category term="R����" scheme="http://yoursite.com/categories/R%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD/"/>
    
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>将Excel文档转换为CSV格式导入R以及R数据框导出为CSV</title>
    <link href="http://yoursite.com/2018/09/11/%E5%B0%86Excel%E6%96%87%E6%A1%A3%E8%BD%AC%E6%8D%A2%E4%B8%BAcsv%E6%A0%BC%E5%BC%8F%E5%AF%BC%E5%85%A5R/"/>
    <id>http://yoursite.com/2018/09/11/将Excel文档转换为csv格式导入R/</id>
    <published>2018-09-11T15:41:17.000Z</published>
    <updated>2019-03-27T07:21:49.222Z</updated>
    
    <content type="html"><![CDATA[<h2 id="emsp-1-将Excel表格并另存为CSV-逗号分隔-格式文件；"><a href="#emsp-1-将Excel表格并另存为CSV-逗号分隔-格式文件；" class="headerlink" title="&emsp;1. 将Excel表格并另存为CSV(逗号分隔)格式文件；"></a>&emsp;1. 将Excel表格并另存为CSV(逗号分隔)格式文件；</h2><h2 id="emsp-2-如有引号，用记事本打开CSV，确认文本中不含有中文符号，文本编码最好为ANSI格式；"><a href="#emsp-2-如有引号，用记事本打开CSV，确认文本中不含有中文符号，文本编码最好为ANSI格式；" class="headerlink" title="&emsp;2. 如有引号，用记事本打开CSV，确认文本中不含有中文符号，文本编码最好为ANSI格式；"></a>&emsp;2. 如有引号，用记事本打开CSV，确认文本中不含有中文符号，文本编码最好为ANSI格式；</h2><h2 id="emsp-3-将CSV放入R目前工作目录（getwd-显示当前工作目录）后，运行："><a href="#emsp-3-将CSV放入R目前工作目录（getwd-显示当前工作目录）后，运行：" class="headerlink" title="&emsp;3. 将CSV放入R目前工作目录（getwd()显示当前工作目录）后，运行："></a>&emsp;3. 将CSV放入R目前工作目录（getwd()显示当前工作目录）后，运行：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- read.table(<span class="string">"文件名.csv"</span>, header=TRUE, row.names=<span class="string">"第一列"</span>, sep=<span class="string">","</span>)</span><br><span class="line">colClasses=c(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;header=TRUE：第一行包含变量名。row.names：行名，指定一个或多个行标记符。sep=”,”：读取逗号分隔的行内数据文件。colClasses：对每一列都指定一个类（逻辑型、数值型、字符型、因子型等），如numeric 数值型变量、character 字符型向量，NULL则跳过该列。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str(x)</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;显示对象结构。</p><h2 id="emsp-4-将数据框输出为-csv文件："><a href="#emsp-4-将数据框输出为-csv文件：" class="headerlink" title="&emsp;4. 将数据框输出为.csv文件："></a>&emsp;4. 将数据框输出为.csv文件：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">write.table(数据框, <span class="string">"文件名.csv"</span>, quote=FALSE, sep=<span class="string">","</span>, row.names=FALSE, col.names=TRUE)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;emsp-1-将Excel表格并另存为CSV-逗号分隔-格式文件；&quot;&gt;&lt;a href=&quot;#emsp-1-将Excel表格并另存为CSV-逗号分隔-格式文件；&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;1. 将Excel表格并另存为CSV(逗
      
    
    </summary>
    
      <category term="R语言" scheme="http://yoursite.com/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>搭建 Hexo+Github+域名 个人博客</title>
    <link href="http://yoursite.com/2017/11/25/%E6%90%AD%E5%BB%BA-Hexo+Github+%E5%9F%9F%E5%90%8D-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/11/25/搭建-Hexo+Github+域名-个人博客/</id>
    <published>2017-11-25T10:26:35.000Z</published>
    <updated>2018-09-11T17:19:17.006Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&nbsp;<strong>Maybe you just want to write your blog, but if you don’t have a site for yourself, your blog couln’t really belong to you. It is a place where you release your true nature, a place where you find joy in the process of blogging: you blogging in your own site. Make your own site, it may be your_name.com or something else, then Hexo and GitHub help adding your blog into your site, and you blog in your own site.</strong><br>&emsp;&nbsp;<strong>There are some experiences I have summarized when I made my own site blog:</strong> </p><h2 id="emsp-一、下载安装-Git-和-Node-js："><a href="#emsp-一、下载安装-Git-和-Node-js：" class="headerlink" title="&emsp;一、下载安装 Git 和 Node.js："></a>&emsp;一、下载安装 Git 和 Node.js：</h2><p>&emsp;&emsp;● GitHub 是一个代码托管平台，只支持 Git 作为唯一的版本库格式进行托管，我们可以把本地的网页和文章提交到 GitHub 上。而 Hexo 博客系统基于 Node.js 编写。Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，可以在非浏览器环境下，解释运行 JS 代码。在官网下载 Git 和 Node.js：</p><h4 id="emsp-Git-官网：https-git-scm-com"><a href="#emsp-Git-官网：https-git-scm-com" class="headerlink" title="&emsp;Git 官网：https://git-scm.com"></a>&emsp;Git 官网：<a href="https://git-scm.com" target="_blank" rel="noopener">https://git-scm.com</a></h4><h4 id="emsp-Node-官网：https-nodejs-org-en"><a href="#emsp-Node-官网：https-nodejs-org-en" class="headerlink" title="&emsp;Node 官网：https://nodejs.org/en/"></a>&emsp;Node 官网：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></h4><p>&emsp;安装后打开 Git Bash 输入以下命令查看版本号确认安装成功:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure></p><p>&emsp;同样的输入查看 Node.js 的版本号:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure></p><p>&emsp;● 安装完成后重启电脑</p><h2 id="emsp-二、安装-Hexo-和-NexT-主题："><a href="#emsp-二、安装-Hexo-和-NexT-主题：" class="headerlink" title="&emsp;二、安装 Hexo 和 NexT 主题："></a>&emsp;二、安装 Hexo 和 NexT 主题：</h2><h3 id="emsp-（一）安装-Hexo："><a href="#emsp-（一）安装-Hexo：" class="headerlink" title="&emsp;（一）安装 Hexo："></a>&emsp;（一）安装 Hexo：</h3><p>&emsp;&emsp;● Hexo 是一款静态博客生成器。它是一个快速、简洁且高效的博客框架，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。静态的意思是指生成的博客网站访客只能浏览，没法像淘宝那样在我们的网站上提交信息。Hexo 负责把我们写的 Markdown 文件根据选定的主题（规定网站的外观样式的文件）生成一堆 HTML 以及负责外观样式的 CSS 和 Javascript 文件。此外，Hexo 还提供了帮我们把这一堆 HTML、CSS、Javascript 文件上传到 Github 服务器的功能，也就是部署。</p><h4 id="emsp-Hexo-主页：https-hexo-io-zh-cn"><a href="#emsp-Hexo-主页：https-hexo-io-zh-cn" class="headerlink" title="&emsp;Hexo 主页：https://hexo.io/zh-cn/"></a>&emsp;Hexo 主页：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></h4><p>&emsp;在 Git Bash 命令行输入（如出现 WARN 不会影响正常使用）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p><p>&emsp;安装完成后执行以下命令初始化 Hexo：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> f:/hexo   <span class="comment">#your-hexo-site</span></span><br><span class="line">$ hexo init</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><p>&emsp;Hexo 将会在指定文件夹中新建所需要的文件，新建完成后指定文件夹的目录如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">├── .deploy         <span class="comment">#需要部署的文件</span></span><br><span class="line"></span><br><span class="line">├── node_modules    <span class="comment">#Hexo插件</span></span><br><span class="line"></span><br><span class="line">├── public          <span class="comment">#生成的静态网页文件</span></span><br><span class="line"></span><br><span class="line">├── scaffolds       <span class="comment">#模板</span></span><br><span class="line"></span><br><span class="line">├── <span class="built_in">source</span>          <span class="comment">#博客正文和其他源文件，404、favicon、CNAME 都应该放在这里</span></span><br><span class="line"></span><br><span class="line">| ├── _drafts       <span class="comment">#草稿</span></span><br><span class="line"></span><br><span class="line">| └── _posts        <span class="comment">#文章</span></span><br><span class="line"></span><br><span class="line">├── themes          <span class="comment">#主题</span></span><br><span class="line"></span><br><span class="line">├── _config.yml     <span class="comment">#全局配置文件</span></span><br><span class="line"></span><br><span class="line">└── package.json    <span class="comment">#npm 依赖等</span></span><br></pre></td></tr></table></figure></p><p>&emsp;也可以查看 Hexo 的版本来确认安装成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo v</span><br></pre></td></tr></table></figure></p><p>&emsp;执行命令后会出现以下结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ hexo v</span><br><span class="line">hexo: 3.4.2</span><br><span class="line">hexo-cli: 1.0.4</span><br><span class="line">os: Windows_NT 10.0.15063 win32 x64</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">node: 8.9.1</span><br><span class="line">v8: 6.1.534.47</span><br><span class="line">uv: 1.15.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">modules: 57</span><br><span class="line">nghttp2: 1.25.0</span><br><span class="line">openssl: 1.0.2m</span><br><span class="line">icu: 59.1</span><br><span class="line">unicode: 9.0</span><br><span class="line">cldr: 31.0.1</span><br><span class="line">tz: 2017b</span><br></pre></td></tr></table></figure></p><p>&emsp;最后启动本地 Hexo 站点：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p><p>&emsp;如果 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> （如打不开可执行 $ hexo s -p 2000 并访问 <a href="http://localhost:2000" target="_blank" rel="noopener">http://localhost:2000</a> ）能够正常访问，则说明 Hexo 本地博客已经搭建好了。<br>&emsp;最后可以修改站点配置文件 _config.yml，添加自己的博客信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: your_blog_name</span><br><span class="line">subtitle: introduction under your_blog_name</span><br><span class="line">description: introductiuon under your_name</span><br><span class="line">author: your_name</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></p><h3 id="emsp-（二）安装-NexT-主题："><a href="#emsp-（二）安装-NexT-主题：" class="headerlink" title="&emsp;（二）安装 NexT 主题："></a>&emsp;（二）安装 NexT 主题：</h3><h4 id="emsp-NexT-官网：http-theme-next-iissnan-com"><a href="#emsp-NexT-官网：http-theme-next-iissnan-com" class="headerlink" title="&emsp;NexT 官网：http://theme-next.iissnan.com"></a>&emsp;NexT 官网：<a href="http://theme-next.iissnan.com" target="_blank" rel="noopener">http://theme-next.iissnan.com</a></h4><p>&emsp;在 Git Bash 窗口输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> f:/hexo</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>&emsp;最后在 f:/hexo（即你指定的文件夹）中打开 _config.yml （站点配置文件）文件，找到 theme 字段，并将其值更改为 next：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p><p>&emsp;最后启动本地 Hexo 站点并开启调试模式（即加上 –debug）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s --debug</span><br></pre></td></tr></table></figure></p><p>&emsp;用浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，检查 NexT 主题是否安装成功。<br>最后可以在主题配置文件 themes/next/_config.yml 中选择你想要的 NexT 主题风格：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure></p><p>&emsp;以及主页需要显示的菜单：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure></p><h2 id="emsp-三、注册并关联-GitHub："><a href="#emsp-三、注册并关联-GitHub：" class="headerlink" title="&emsp;三、注册并关联 GitHub："></a>&emsp;三、注册并关联 GitHub：</h2><h3 id="emsp-（一）注册-GitHub："><a href="#emsp-（一）注册-GitHub：" class="headerlink" title="&emsp;（一）注册 GitHub："></a>&emsp;（一）注册 GitHub：</h3><p>&emsp;&emsp;● Github Page：我们平时在新浪上看新闻的时候，所有的东西都要从新浪服务器发送到我们的手机、电脑上。我们的网站也一样，需要一个服务器，把用 Hexo 生成的那些 HTML、CSS、Javascript 文件发送给访客。但我们自己没有服务器呀？Github Pages 是 Github 提供的一项免费的静态页面托管服务，提供 your_name.github.io 的域名（your_name 为你的 Github 用户名）发布自己的静态网站。我们把 Hexo 生成的内容上传到 Github 服务器，访客的浏览器就是从 Github 服务器获取相关文件的。</p><h4 id="emsp-GitHub-官网：https-github-com"><a href="#emsp-GitHub-官网：https-github-com" class="headerlink" title="&emsp;GitHub 官网：https://github.com"></a>&emsp;GitHub 官网：<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></h4><p>&emsp;注册时你填写的Username即是你的域名：username.github.com。比如我用ijianlei为用户名（Username）注册了 GitHub，新建 repository（New repository）时以 ijianlei.github.io（必须与用户名保持一致）新建一个 repository，在 ijianlei.github.io 的设置（Settings）里选择一个主题（choose a theme）后就可以访问 ijianlei.github.io 这个网址了。</p><h3 id="emsp-（二）关联-GitHub-Pages-到-Hexo："><a href="#emsp-（二）关联-GitHub-Pages-到-Hexo：" class="headerlink" title="&emsp;（二）关联 GitHub Pages 到 Hexo："></a>&emsp;（二）关联 GitHub Pages 到 Hexo：</h3><p>&emsp;输入你注册 GitHub 时所用的邮箱生成 SSH Key：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your_registered_email"</span></span><br></pre></td></tr></table></figure></p><p>&emsp;回车后会提示你输入一个密码，直接回车设置为空，直接回车确认密码为空（不设置密码）。用记事本打开 C:\Users\bxm09.ssh\id_rsa.pub，复制 SSH Key 到 <a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a> 里新建的 new SSH key，最后输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>&emsp;如出现：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (207.97.227.239)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>&emsp;输入 yes 回车后出现以下文字则设置成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi aierui! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></p><p>&emsp;现在已经可以通过 SSH 链接到 GitHub，最后输入以下命令完善你的 GitHub 用户名和邮箱，Git 会根据用户的名字和邮箱来记录提交：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"your_username"</span> </span><br><span class="line">&amp; git config --global user.email <span class="string">"your_registered_email"</span></span><br></pre></td></tr></table></figure></p><p>&emsp;最后在站点配置文件 f:/hexo/_config.yml 中修改以下 Deployment 信息，输入你的用户信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:ijianlei/ijianlei.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>&emsp;然后在 Git Bash 窗口依次执行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><p>&emsp;大功告成，在浏览器中输入 ijianlei.github.io （换成 your_username）就进入你的 Hexo Blog 啦！<br>&emsp;若需要将本地hexo文件夹同步到一台新的电脑上（或者重装电脑），则需要安装 Git 和 Node，并依次执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ <span class="built_in">cd</span> f:/hexo</span><br><span class="line">$ hexo v                                <span class="comment"># 确认 hexo 关联成功</span></span><br><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ hexo clean                            <span class="comment"># 删除 .deploy_git 和 public 文件夹后执行该命令</span></span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure></p><h2 id="emsp-四、绑定独立域名："><a href="#emsp-四、绑定独立域名：" class="headerlink" title="&emsp;四、绑定独立域名："></a>&emsp;四、绑定独立域名：</h2><h3 id="emsp-（一）购买属于自己的一级域名："><a href="#emsp-（一）购买属于自己的一级域名：" class="headerlink" title="&emsp;（一）购买属于自己的一级域名："></a>&emsp;（一）购买属于自己的一级域名：</h3><p>&emsp;Godaddy、DNSPod、Gandi、阿里云…</p><h3 id="emsp-（二）域名解析将-your-name-github-io-指定到你的域名："><a href="#emsp-（二）域名解析将-your-name-github-io-指定到你的域名：" class="headerlink" title="&emsp;（二）域名解析将 your_name.github.io 指定到你的域名："></a>&emsp;（二）域名解析将 your_name.github.io 指定到你的域名：</h3><p>&emsp;以阿里云域名为例，在 控制台-域名与网站（万网）-域名-解析-添加解析 中添加两个解析：记录类型：A 主机纪录：@ 解析线路(isp)：默认值 记录值：192.30.252.153 和 192.30.252.154。<br>&emsp;● 192.30.252.153 和 192.30.252.154 为 GIthub 服务器的 IP 地址，可以从 Github 的官方文档 Configuring A records with your DNS provider 知道。<br>&emsp;最后在 f:/hexo/source 中新建一个 CNAME （大写 无后缀）的文件，用记事本键入你的域名（只能一个且不能加 http:// ），再次运行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><p>&emsp;到此，当你在浏览器中输入 your_name.github.io 网页就会自动跳转到你的域名，且显示为你的 Hexo Blog 网站信息。同样的你的域名就是你的 Hexo Blog 地址。</p><h2 id="emsp-五、发表文章："><a href="#emsp-五、发表文章：" class="headerlink" title="&emsp;五、发表文章："></a>&emsp;五、发表文章：</h2><p>&emsp;键入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> f:/hexo</span><br><span class="line">$ hexo new <span class="string">"your_title"</span></span><br></pre></td></tr></table></figure></p><p>&emsp;这样在本地博客文件夹 source_posts 文件夹下我们可以找到新建的 markdown 文件。<br>&emsp;每次写完文章之后依次执行以下命令就可以发布更新了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean      <span class="comment">#清除缓存</span></span><br><span class="line">$ hexo g          <span class="comment">#生成静态网页文件</span></span><br><span class="line">$ hexo d          <span class="comment">#将本地博客发布到GitHub</span></span><br></pre></td></tr></table></figure></p><p>&emsp;如 GitHub 博客网页未刷新，可先启动本地 Hexo 站点 $ hexo s 并用浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 进行刷新,然后再刷新 GitHub 博客网页。</p><h2 id="emsp-六、参考："><a href="#emsp-六、参考：" class="headerlink" title="&emsp;六、参考："></a>&emsp;六、参考：</h2><p>&emsp;● 可能是最详细的 Hexo + GitHub Pages 搭建博客的教程<br>&emsp;作者：白小明0927<br>&emsp;链接：<a href="http://www.jianshu.com/p/39562a0d8eb6" target="_blank" rel="noopener">http://www.jianshu.com/p/39562a0d8eb6</a><br>&emsp;● 知行合一 | 用 Hexo 搭建博客<br>&emsp;作者：Grok<br>&emsp;链接：<a href="http://lowrank.science/Hexo-Github/" target="_blank" rel="noopener">http://lowrank.science/Hexo-Github/</a><br>&emsp;● GitHub Pages 指南<br>&emsp;作者：极客学院<br>&emsp;链接：<a href="http://wiki.jikexueyuan.com/project/github-pages-basics/" target="_blank" rel="noopener">http://wiki.jikexueyuan.com/project/github-pages-basics/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;nbsp;&lt;strong&gt;Maybe you just want to write your blog, but if you don’t have a site for yourself, your blog couln’t really belong to
      
    
    </summary>
    
      <category term="静态博客" scheme="http://yoursite.com/categories/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="NexT" scheme="http://yoursite.com/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/11/24/hello-world/"/>
    <id>http://yoursite.com/2017/11/24/hello-world/</id>
    <published>2017-11-24T04:36:26.000Z</published>
    <updated>2017-12-19T08:55:11.871Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><p><div id="container"></div></p><p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p><script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script><script>var gitment = new Gitment({  id: location.href  owner: 33879410  repo: gitment  oauth: {    client_id: 0e5e3ec686cc8927173e    client_secret: 7e2857b0756740ed98222b246277ba2fb2743f6b  },})gitment.render('container')</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
